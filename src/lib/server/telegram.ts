import { Telegram } from 'telegraf'
import type { ParseMode } from 'telegraf/types'
import { Order } from '../types/index.js'

const { TELEGRAM_BOT_TOKEN, TELEGRAM_CHANNEL } = process.env
if(!(TELEGRAM_BOT_TOKEN && TELEGRAM_CHANNEL)) throw 'please setup telegram token and channel'

const TG = new Telegram(TELEGRAM_BOT_TOKEN || '')

type MessageOptions = {
    parse_mode: ParseMode,
    caption?: string,
    link_preview_options: {is_disabled: boolean}
}

const OPTIONS: MessageOptions = {
    parse_mode: 'Markdown',
    link_preview_options: {is_disabled: true}
}

export const sendMessage = async (message: string) => {
    await TG.sendMessage(TELEGRAM_CHANNEL, message, OPTIONS)
}

export const sendOrderCreatedMessage = async (orderId: number) => {
    let message = `üÜó –û—Ç –ú–∞—Ä–∫–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑ ‚Ññ¬†${orderId}.`
    await sendMessage(message)
}

export const sendOrderDeliveredMessage = async (orderId: number) => {
    let message = `üèÅ –ó–∞–∫–∞–∑ ‚Ññ¬†${orderId} –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—é.`
    await sendMessage(message)
}

export const sendProcessingStartedMessage = async (order: Order, sum: number, count: number) => {
    const { id, items } = order
    const basket = (items || []).map(({offerId, count}) => `${offerId}¬†(${count})`).join(', ')
    let message = `‚è±Ô∏è –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ ‚Ññ¬†${id}: ${basket}.`
    const lack = sum - count
    if(!lack) message += ` –ó–∞–∫–∞–∑ –æ–±–µ—Å–ø–µ—á–µ–Ω –∫–æ–¥–∞–º–∏ –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.`
    else message += ` –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–¥–æ–≤: ${count} –∏–∑ ${sum}. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ [–±–æ—Ç—É¬†ü§ñ](https://t.me/activation_service_bot), —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å.`
    await sendMessage(message)
}
